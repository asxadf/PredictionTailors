clc;
clear;
close all;
%% ------------------------------ Setting ------------------------------ %%
Season = 1;
Budget = 20;
Out_Obj_Gap_Threshold = 1;
In_Obj_Gap_Threshold  = 3;
Iteration_Max = 10;
%
%% ----------------------------- Root Path ----------------------------- %%
Ini_Path = which('Location_CPO_v10.m');
Ini_Size = size('Location_CPO_v10.m', 2);
if ispc == 1
    Link = '\';
elseif ismac == 1
    Link = '/';
end
Path_Root = Ini_Path(1:end - Ini_Size - 1);
Path_Data = strcat(Path_Root, Link, 'Database');
Path_RO   = strcat(Path_Root, Link, 'Case_Studies', Link, 'RO');
Peak_Day_List = readmatrix(strcat(Path_Data, Link, 'Peak_Day_List', '.csv'));
Day_Dispatch  = Peak_Day_List(Season);
Date_All_List = importdata(strcat(Path_Data, Link, 'Date_All_List', '.mat'));
Date_Dispatch = Date_All_List(Day_Dispatch);
%
%% ----------------------------- Database ------------------------------ %%
[Num_Gen,...
 Num_Branch,...
 Num_Bus,...
 Num_City,...
 Num_Hour,...
 Num_RES,...
 Gen_Capacity,...
 Gen_Price,...
 Branch,...
 Load_Gro_SUM_All_ACT,...
 Load_Gro_SUM_All_DAF,...
 Load_Gro_SUM_Dis_ACT,...
 Load_Gro_SUM_Dis_DAF, Load_Gro_SUM_Dis_DAF_UB, Load_Gro_SUM_Dis_DAF_LB,...
 Load_Net_SUM_All_ACT,...
 Load_Net_SUM_All_DAF,...
 Load_Net_SUM_Dis_ACT,...
 Load_Net_SUM_Dis_DAF,...
 Load_City_All_ACT,...
 Load_City_All_DAF,...
 Load_City_Dis_ACT,...
 Load_City_Dis_DAF,...
 RES_SUM_All_ACT,...
 RES_SUM_All_DAF, RES_SUM_All_DAF_UB, RES_SUM_All_DAF_LB,...
 RES_SUM_Dis_ACT,...
 RES_SUM_Dis_DAF, RES_SUM_Dis_DAF_UB, RES_SUM_Dis_DAF_LB,...
 RES_Farm_All_ACT,...
 RES_Farm_All_DAF, RES_Farm_All_DAF_UB, RES_Farm_All_DAF_LB,...
 RES_Farm_Dis_ACT,...
 RES_Farm_Dis_DAF, RES_Farm_Dis_DAF_UB, RES_Farm_Dis_DAF_LB,...
 R_Sys_Req_All,...
 R_Sys_Req_Dis,...
 R_H_Req_All,...
 R_H_Req_Dis,...
 R_C_Req_All,...
 R_C_Req_Dis,...
 PTDF_Gen,...
 PTDF_City,...
 PTDF_RES,...
 GS_Price,...
 LS_Price,...
 BS_Price,...
 Date_All_List,...
 Day, Pre_W_UB, Pre_W_LB,...
 Unit_Quick,...
 Unit_Thermal] = Database_CPO_v10(Date_Dispatch, Link, Path_Data);
%
%% ----------------------------- Initialize ---------------------------- %%
Recorder_Text{1, 1}  = 'Date';
Recorder_Text{2, 1}  = 'Budget';
Recorder_Text{3, 1}  = 'Out_W_UB';
Recorder_Text{4, 1}  = 'Out_W_LB';
Recorder_Text{5, 1}  = 'Out_L_UB';
Recorder_Text{6, 1}  = 'Out_L_LB';
Recorder_Text{7, 1}  = 'Out_Obj_UB';
Recorder_Text{8, 1}  = 'Out_Obj_LB';
Recorder_Text{9, 1}  = 'Out_Obj_Gap';
Recorder_Text{10, 1} = 'Var_UC_I';
Recorder_Text{11, 1} = 'Var_UC_I_SU';
Recorder_Text{12, 1} = 'Var_UC_I_SD';
Recorder_Text{13, 1} = 'Var_UC_I_RC';
Recorder_Text{14, 1} = 'Var_UC_P';
Recorder_Text{15, 1} = 'Var_UC_W';
Recorder_Text{16, 1} = 'Var_UC_R_H';
Recorder_Text{17, 1} = 'Var_UC_R_C';
Recorder_Text{18, 1} = 'Cost_1st_Stage';
Recorder_Text{19, 1} = 'In_W_UB_History';
Recorder_Text{20, 1} = 'In_W_LB_History';
Recorder_Text{21, 1} = 'In_L_UB_History';
Recorder_Text{22, 1} = 'In_L_LB_History';
Recorder_Text{23, 1} = 'Var_ED_I_History';
Recorder_Text{24, 1} = 'Var_ED_I_SU_History';
Recorder_Text{25, 1} = 'Var_ED_I_SD_History';
Recorder_Text{26, 1} = 'In_Num_Enumeration';
Recorder_Text{27, 1} = 'In_Obj_UB_History';
Recorder_Text{28, 1} = 'In_Obj_LB_History';
Recorder_Text{29, 1} = 'In_Obj_Gap_History';
Recorder_Text{30, 1} = 'Out_Obj_Gap_Threshold';
Recorder_Text{31, 1} = 'In_Obj_Gap_Threshold';

Recorder_Ini{1, 1}  = Date_Dispatch; % Dispatch Date:   Public
Recorder_Ini{2, 1}  = Budget;        % Budget: Public
Recorder_Ini{3, 1}  = zeros(Num_Hour, Num_RES); % Out_W_UB: Scenario from In_MP to Out_MP
Recorder_Ini{4, 1}  = zeros(Num_Hour, Num_RES); % Out_W_LB: Scenario from In_MP to Out_MP
Recorder_Ini{5, 1}  = zeros(Num_Hour, 1);       % Out_L_UB: Scenario from In_MP to Out_MP
Recorder_Ini{6, 1}  = zeros(Num_Hour, 1);       % Out_L_LB: Scenario from In_MP to Out_MP
Recorder_Ini{7, 1}  = []; % Out_Obj_UB:  Given by Out_MP and In_SP
Recorder_Ini{8, 1}  = []; % Out_Obj_LB:  Given by Out_MP
Recorder_Ini{9, 1}  = []; % Out_Obj_Gap: Given by In_SP and Out_MP
Recorder_Ini{10, 1} = []; % Var_UC_I:       From Out_MP to In_SP/In_MP
Recorder_Ini{11, 1} = []; % Var_UC_I_SU:    From Out_MP to In_SP/In_MP
Recorder_Ini{12, 1} = []; % Var_UC_I_SD:    From Out_MP to In_SP/In_MP
Recorder_Ini{13, 1} = []; % Var_UC_I_RC:    From Out_MP to In_SP/In_MP
Recorder_Ini{14, 1} = []; % Var_UC_P:       From Out_MP to In_SP/In_MP
Recorder_Ini{15, 1} = []; % Var_UC_W:       From Out_MP to In_SP/In_MP
Recorder_Ini{16, 1} = []; % Var_UC_R_H:     From Out_MP to In_SP/In_MP
Recorder_Ini{17, 1} = []; % Var_UC_R_C:     From Out_MP to In_SP/In_MP
Recorder_Ini{18, 1} = []; % Cost_1st_Stage: From Out_MP to In_SP/In_MP
Recorder_Ini{19, 1} = {zeros(Num_Hour, Num_RES)}; % In_W_UB_History: Scenarios from In_MP to In_SP
Recorder_Ini{20, 1} = {zeros(Num_Hour, Num_RES)}; % In_W_LB_History: Scenarios from In_MP to In_SP
Recorder_Ini{21, 1} = {zeros(Num_Hour, 1)};       % In_L_UB_History: Scenarios from In_MP to In_SP
Recorder_Ini{22, 1} = {zeros(Num_Hour, 1)};       % In_L_LB_History: Scenarios from In_MP to In_SP
Recorder_Ini{23, 1} = {}; % Var_ED_I_History:    Enumerated I from In_SP for In_MP
Recorder_Ini{24, 1} = {}; % Var_ED_I_SU_History: Enumerated I from In_SP for In_MP
Recorder_Ini{25, 1} = {}; % Var_ED_I_SD_History: Enumerated I from In_SP for In_MP
Recorder_Ini{26, 1} = 0;  % In_Num_Enumeration:  Number of binary enumerations in In_MP
Recorder_Ini{27, 1} = inf; % In_Obj_UB_History  under these Out_MP solutions
Recorder_Ini{28, 1} = [];  % In_Obj_LB_History  under these Out_MP solutions
Recorder_Ini{29, 1} = [];  % In_Obj_Gap_History under these Out_MP solutions
Recorder_Ini{30, 1} = Out_Obj_Gap_Threshold; % Out_Gap_Threshold
Recorder_Ini{31, 1} = In_Obj_Gap_Threshold;  % In_Gap_Threshold
%
Recorder_Ini = [Recorder_Text Recorder_Ini];
%
%% -------------------------------- C&CG ------------------------------- %%
for i = 1:Iteration_Max
    % MP
    if i == 1
        [Recorder_Updated, Flag_Out_Converge] = NCCG_MP_v10(Season, Recorder_Text, Recorder_Ini);
    else
        [Recorder_Updated, Flag_Out_Converge] = NCCG_MP_v10(Season, Recorder_Text, Recorder_Updated);
    end
    % Check Out Convergence
    if Flag_Out_Converge == 1
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        Out_Obj_Gap = Recorder_Updated{9, end};
        disp(['Outer Iteration: #', num2str(i)]);
        disp(['Outer Gap: ', num2str(Out_Obj_Gap), '%']);
        disp('The outer C&CG is done!');
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        break
    end
    if Flag_Out_Converge ~= 1 && i == Iteration_Max
        Recorder_Updated(:, end) = [];
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        Out_Obj_Gap = Recorder_Updated{9, end};
        disp(['Outer Iteration: #', num2str(i)]);
        disp(['Outer Gap: ', num2str(Out_Obj_Gap), '%']);
        disp('The outer C&CG is done!');
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        break
    end
    if Flag_Out_Converge ~= 1 && i ~= Iteration_Max
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        Out_Obj_Gap = Recorder_Updated{9, end-1};
        disp(['Outer Iteration: #', num2str(i)]);
        disp(['Outer Gap: ', num2str(Out_Obj_Gap), '%']);
        disp('The outer C&CG needs more iteration...');
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
    end
    % SP
    [Recorder_Updated, Flag_Out_Converge] = NCCG_SP_v10(Season, Recorder_Text, Recorder_Updated);
    % Check Out Convergence
    if Flag_Out_Converge == 1
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        Out_Obj_Gap = Recorder_Updated{9, end};
        disp(['Outer Iteration: #', num2str(i)]);
        disp(['Outer Gap: ', num2str(Out_Obj_Gap), '%']);
        disp('The outer C&CG is done!');
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        break
    end
    if Flag_Out_Converge ~= 1 && i == Iteration_Max
        Recorder_Updated(:, end) = [];
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        Out_Obj_Gap = Recorder_Updated{9, end};
        disp(['Outer Iteration: #', num2str(i)]);
        disp(['Outer Gap: ', num2str(Out_Obj_Gap), '%']);
        disp('The outer C&CG is done!');
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        break
    end
    if Flag_Out_Converge ~= 1 && i ~= Iteration_Max
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
        Out_Obj_Gap = Recorder_Updated{9, end-1};
        disp(['Outer Iteration: #', num2str(i)]);
        disp(['Outer Gap: ', num2str(Out_Obj_Gap), '%']);
        disp('The outer C&CG needs more iteration...');
        disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
    end
end
%% -------------------------------- ED --------------------------------- %%
Var_UC_I    = Recorder_Updated{10,end};
Var_UC_I_SU = Recorder_Updated{11,end};
Var_UC_I_SD = Recorder_Updated{12,end};
Var_UC_I_RC = Recorder_Updated{13,end};
Var_UC_P    = Recorder_Updated{14,end};
Var_UC_W    = Recorder_Updated{15,end};
Var_UC_R_H  = Recorder_Updated{16,end};
Var_UC_R_C  = Recorder_Updated{17,end};

Cost_UC_SU  = Gen_Price(:, 5)'*sum(Var_UC_I_SU, 2);
Cost_UC_NL  = Gen_Price(:, 2)'*sum(Var_UC_I, 2);
Cost_UC_P   = Gen_Price(:, 3)'*sum(Var_UC_P, 2);
Cost_UC_ACT = Cost_UC_SU + Cost_UC_NL;

[Var_ED_I,...
 Var_ED_I_SU,...
 Var_ED_I_SD,...
 Var_ED_P,...
 Var_ED_W,...
 Var_ED_S1,...
 Var_ED_S2,...
 Var_ED_S3,...
 Var_ED_S4,...
 Cost_ED_SU,...
 Cost_ED_NL,...
 Cost_ED_P,...
 Cost_ED_S1,...
 Cost_ED_S2,...
 Cost_ED_S3,...
 Cost_ED_S4,...
 Cost_ED_ACT,...
 Cost_SYS_ACT,...
 Rate_RES,...
 Rate_RH,...
 Rate_RH_Up,...
 Rate_RH_Dn,...
 Rate_RC,...
 Rate_RES_AVR,...
 Rate_RH_AVR,...
 Rate_RH_Up_AVR,...
 Rate_RH_Dn_AVR,...
 Rate_RC_AVR,...
 PE_MAE,...
 PE_MAPE,...
 PE_MOPE,...
 PE_MUPE]...
 = ED_Auto_v10(Date_Dispatch,...
              Var_UC_I,...
              Var_UC_P,...
              Var_UC_R_H,...
              Var_UC_R_C,...
              Cost_UC_ACT,...
              RES_Farm_Dis_DAF,...
              RES_SUM_Dis_DAF,...
              R_H_Req_Dis,...
              R_C_Req_Dis,...
              Link,...
              Path_Data);
if Budget < 10
    save(strcat(Path_RO, Link, 'Season_', num2str(Season), '_Budget_0', num2str(Budget)));
elseif Budget >= 10
    save(strcat(Path_RO, Link, 'Season_', num2str(Season), '_Budget_', num2str(Budget)));
end