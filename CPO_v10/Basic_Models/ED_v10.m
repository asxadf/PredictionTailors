% clc;
% clear;
% close all;
%% ------------------------------- Path -------------------------------- %%
Ini_Path = which('Location_CPO_v10.m');
Ini_Size = size('Location_CPO_v10.m', 2);
if ispc == 1
    Link = '\';
elseif ismac == 1
    Link = '/';
end
Path_Root = Ini_Path(1:end - Ini_Size - 1);
Path_Data = strcat(Path_Root, Link, 'Database');
Path_Temp = strcat(Path_Root, Link, 'Temp');
%
%% ------------------------------ Setting ------------------------------ %%
load(strcat(Path_Temp, Link, 'Pkg.mat'));
Date_Dispatch = datestr(Pkg{1});
Var_UC_I      = Pkg{2};
Var_UC_P      = Pkg{3};
Var_UC_R_H    = Pkg{4};
Var_UC_R_C    = Pkg{5};
Cost_UC_ACT   = Pkg{6};
Cost_SYS_EXP  = Pkg{7};
Cost_UC_SU    = Pkg{8};
Cost_UC_NL    = Pkg{9};
%
%% ------------------------------ Loading ------------------------------ %%
[Num_Gen,...
 Num_Branch,...
 Num_Bus,...
 Num_City,...
 Num_Hour,...
 Num_RES,...
 Gen_Capacity,...
 Gen_Price,...
 Branch,...
 Load_Gro_SUM_All_ACT,...
 Load_Gro_SUM_All_DAF,...
 Load_Gro_SUM_Dis_ACT,...
 Load_Gro_SUM_Dis_DAF, Load_Gro_SUM_Dis_DAF_UB, Load_Gro_SUM_Dis_DAF_LB,...
 Load_Net_SUM_All_ACT,...
 Load_Net_SUM_All_DAF,...
 Load_Net_SUM_Dis_ACT,...
 Load_Net_SUM_Dis_DAF,...
 Load_City_All_ACT,...
 Load_City_All_DAF,...
 Load_City_Dis_ACT,...
 Load_City_Dis_DAF,...
 RES_SUM_All_ACT,...
 RES_SUM_All_DAF, RES_SUM_All_DAF_UB, RES_SUM_All_DAF_LB,...
 RES_SUM_Dis_ACT,...
 RES_SUM_Dis_DAF, RES_SUM_Dis_DAF_UB, RES_SUM_Dis_DAF_LB,...
 RES_Farm_All_ACT,...
 RES_Farm_All_DAF, RES_Farm_All_DAF_UB, RES_Farm_All_DAF_LB,...
 RES_Farm_Dis_ACT,...
 RES_Farm_Dis_DAF, RES_Farm_Dis_DAF_UB, RES_Farm_Dis_DAF_LB,...
 R_Sys_Req_All,...
 R_Sys_Req_Dis,...
 R_H_Req_All,...
 R_H_Req_Dis,...
 R_C_Req_All,...
 R_C_Req_Dis,...
 PTDF_Gen,...
 PTDF_City,...
 PTDF_RES,...
 GS_Price,...
 LS_Price,...
 BS_Price,...
 Date_All_List,...
 Day, Pre_W_UB, Pre_W_LB,...
 Unit_Quick,...
 Unit_Thermal] = Database_CPO_v10(Date_Dispatch, Link, Path_Data);
%
%% ------------------------------ Decision ----------------------------- %%
Var_ED_I    = binvar(Num_Gen, Num_Hour);
Var_ED_I_SU = binvar(Num_Gen, Num_Hour);
Var_ED_I_SD = binvar(Num_Gen, Num_Hour);
Var_ED_P    = sdpvar(Num_Gen, Num_Hour);
Var_ED_W    = sdpvar(Num_Hour, Num_RES);
Var_ED_S1   = sdpvar(Num_Hour, 1);
Var_ED_S2   = sdpvar(Num_Hour, 1);
Var_ED_S3   = sdpvar(Num_Hour, Num_Branch);
Var_ED_S4   = sdpvar(Num_Hour, Num_Branch);
%
%% ----------------------------- Objective ----------------------------- %%
Cost_ED_SU  = Gen_Price(:, 5)'*sum(Var_ED_I_SU, 2);
Cost_ED_NL  = Gen_Price(:, 2)'*sum(Var_ED_I, 2);
Cost_ED_P   = Gen_Price(:, 3)'*sum(Var_ED_P, 2);
Cost_ED_S1  = LS_Price*sum(Var_ED_S1);
Cost_ED_S2  = GS_Price*sum(Var_ED_S2);
Cost_ED_S3  = BS_Price*sum(Var_ED_S3(:));
Cost_ED_S4  = BS_Price*sum(Var_ED_S4(:));
Cost_ED_ACT = Cost_ED_SU + Cost_ED_NL + Cost_ED_P...
            + Cost_ED_S1 + Cost_ED_S2 + Cost_ED_S3 + Cost_ED_S4;
%
%% ---------------------------- Constraint ----------------------------- %%
Con = [];
% Online or Offline?
Con = Con + [ Var_UC_I + Var_ED_I <= 1 ];
%
% Logical relationship
for t = 1:Num_Hour
    if t == 1
        Con = Con...
            + [   Var_ED_I_SU(:, t) - Var_ED_I_SD(:, t)...
               == Var_ED_I(:, t) ];
    end
    if t >= 2
        Con = Con...
            + [   Var_ED_I_SU(:, t) - Var_ED_I_SD(:, t)...
               == Var_ED_I(:, t) - Var_ED_I(:, t-1) ];
    end
end
%
% Segment limit
for t = 1:Num_Hour
    Con = Con + [ 0 <= Var_ED_P(:, t)...
                    <= Gen_Capacity(:, 3)...
                       .*(Var_UC_I(:, t) + Var_ED_I(:, t)) ];
end
%
% Generation limit
for t = 1:Num_Hour
    Con = Con...
        + [   Var_ED_P(:, t)...
           >= Gen_Capacity(:, 4).*(Var_UC_I(:, t) + Var_ED_I(:, t)) ];
    Con = Con...
        + [   Var_ED_P(:, t)...
           <= Gen_Capacity(:, 3).*Var_UC_I(:, t)...
            + Var_UC_R_C(:, t).*Var_ED_I(:, t) ];
end
%
% Adjustment limit based on Hot reserve
for t = 1:Num_Hour
    Con = Con...
        + [   Var_ED_P(:, t) - Var_UC_P(:, t)...
           <=  Var_UC_R_H(:, t).*Var_UC_I(:, t) + Gen_Capacity(:, 3).*Var_ED_I(:, t) ];
    Con = Con...
        + [   Var_ED_P(:, t) - Var_UC_P(:, t)...
           >= -Var_UC_R_H(:, t).*Var_UC_I(:, t) - Gen_Capacity(:, 3).*Var_ED_I(:, t) ];
end
%
% Ramping limit
for t = 2:Num_Hour
    Con = Con...
        + [   Var_ED_P(:, t) - Var_ED_P(:, t-1)...
           <= Gen_Capacity(:, 7).*     Var_UC_I(:, t-1)...
            + Gen_Capacity(:, 9).*(    Var_UC_I(:, t)...
                                     - Var_UC_I(:, t-1))...
            + Gen_Capacity(:, 3).*(1 - Var_UC_I(:, t)) ];
    Con = Con...
        + [   Var_ED_P(:, t-1) - Var_ED_P(:, t)...
           <= Gen_Capacity(:, 8).*     Var_UC_I(:, t)...
            + Gen_Capacity(:,10).*(    Var_UC_I(:, t-1)...
                                     - Var_UC_I(:, t))...
            + Gen_Capacity(:, 3).*(1 - Var_UC_I(:, t-1)) ];
end
%
% RES curtailment limit
Con = Con + [ 0 <= Var_ED_W <= RES_Farm_Dis_ACT ];
%
% Power balance
for t = 1:Num_Hour
    Con = Con...
    + [   sum(Var_ED_P(:, t))...
        + sum(Var_ED_W(t, :))...
        + Var_ED_S1(t)...
       == sum(Load_City_Dis_ACT(t, :))...
        + Var_ED_S2(t) ];
end
%
% Transmission limit
for t = 1:Num_Hour
    Con = Con...
        + [   PTDF_Gen*Var_ED_P(:, t)...
            + PTDF_RES*Var_ED_W(t, :)'...
            - PTDF_City*Load_City_Dis_ACT(t, :)'...
            - Var_ED_S3(t, :)'...
           <= Branch(:, 5) ];
    Con = Con...
        + [   PTDF_Gen*Var_ED_P(:, t)...
            + PTDF_RES*Var_ED_W(t, :)'...
            - PTDF_City*Load_City_Dis_ACT(t, :)'...
            + Var_ED_S4(t, :)'...
           >= -Branch(:, 5) ];
           
end
%
% Non-negative
Con = Con + [ Var_ED_S1 >= 0 ]...
          + [ Var_ED_S2 >= 0 ]...
          + [ Var_ED_S3 >= 0 ]...
          + [ Var_ED_S4 >= 0 ];
%
%% ------------------------------ Solve it ----------------------------- %%
disp(['Solving ED for ', datestr(Date_Dispatch)]);
ops = sdpsettings('solver', 'gurobi');
sol = optimize(Con, Cost_ED_ACT, ops);
%
%% ------------------------------ Value it ----------------------------- %%
Var_ED_I    = value(Var_ED_I);
Var_ED_I_SU = value(Var_ED_I_SU);
Var_ED_I_SD = value(Var_ED_I_SD);
Var_ED_P    = value(Var_ED_P);
Var_ED_W    = value(Var_ED_W);
Var_ED_S1   = value(Var_ED_S1);
Var_ED_S2   = value(Var_ED_S2);
Var_ED_S3   = value(Var_ED_S3);
Var_ED_S4   = value(Var_ED_S4);

Cost_ED_SU = value(Cost_ED_SU);
Cost_ED_NL = value(Cost_ED_NL);
Cost_ED_P  = value(Cost_ED_P);
Cost_ED_S1 = value(Cost_ED_S1);
Cost_ED_S2 = value(Cost_ED_S2);
Cost_ED_S3 = value(Cost_ED_S3);
Cost_ED_S4 = value(Cost_ED_S4);

Cost_ED_ACT = value(Cost_ED_ACT);

Cost_SYS_ACT = Cost_ED_ACT + Cost_UC_ACT;
%% ----------------------------- Check LS ------------------------------ %%
Var_ED_LS_Check = floor(sum(Var_ED_S1, 2));
if sum(Var_ED_LS_Check) > 0
    Ratio_LS_Day  = 100;
else
     Ratio_LS_Day = 0;
end
Ratio_LS_Hour   = 100*nnz(Var_ED_LS_Check)/24;
Ratio_LS_Amount = 100*mean(Var_ED_LS_Check./Load_Gro_SUM_Dis_ACT);
%
%% --------------------------- Check network --------------------------- %%
Trans_power = zeros(Num_Branch, Num_Hour);
Trans_rate  = zeros(Num_Branch, Num_Hour);
for t = 1:Num_Hour
    Trans_power(:, t) = PTDF_Gen*Var_ED_P(:, t)...
                      + PTDF_RES*Var_ED_W(t, :)'...
                      - PTDF_City*Load_City_Dis_ACT(t, :)';
end
for i = 1:Num_Branch
    for t = 1:Num_Hour
        Trans_rate(i, t) = round(Trans_power(i, t)/(Branch(i, 5)), 2);
    end   
end
Trans_rate_max_avr = zeros(Num_Branch, 2);
for i = 1:Num_Branch
    Trans_rate_max_avr(i, 1) = max(abs(Trans_rate(i, :))); 
    Trans_rate_max_avr(i, 2) = sum(abs(Trans_rate(i, :)))/Num_Hour; 
end